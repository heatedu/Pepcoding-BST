int countLNodes(LNode *head)  
{  
    int count = 0;  
    LNode *temp = head;  
    while(temp)  
    {  
        temp = temp->next;  
        count++;  
    }  
    return count;  
}  
TNode*helper(LNode*&head,int n)
{
       if (n <= 0)  
        return NULL;
    /* Recursively construct the left subtree */
      TNode*left=helper(head,n/2);
      Tnode*root=new TNode(head->data);
      root->left=left;
      head=head->next;
    /* Recursively construct the right subtree and link it with root.The number of nodes in right subtree is total nodes - nodes in  left subtree - 1 (for root) which is n-n/2-1*/
      root->right=helper(head,n-n/2-1);
      return root;
}
TNode* sortedListToBST(LNode *head)
{
    int n=length(head);
    return helper(head,n);
}
